#ifndef __YRFS_H__
#define __YRFS_H__

#include "types.h"

#define __O_RDONLY__ 0x01
#define __O_WRONLY__ 0x02
#define __O_RDWR__   0x04
#define __O_CREAT__  0x08

#define __INODE_ZONE__        0
#define __FILE_OBJECT_ZONE__ 20

#define __WRITABLE_INODE_SIZE__ 67

/*
 *=======================================================================================
 *ブロックの情報を保持しておく構造体
 *=======================================================================================
 */
struct block_info {
	/*
	 *このブロックは空か？
	 */
	u32_t empty : 1;
};

/*
 *=======================================================================================
 *ファイルがファイルシステムのどこに位置するかを保持する構造体
 *=======================================================================================
 */
struct fs_address {
	u32_t sector;
	u32_t offset;
};

/*
 *=======================================================================================
 *inode構造体
 *=======================================================================================
 */
struct i_node {
	//ファイルのアドレス
	struct fs_address address;
	//ファイルのサイズ
	u32_t size;
	//ファイル名
	char file_name[256];
};

/*
 *=======================================================================================
 *書き込み可能な形式のデータを保持する構造体
 *=======================================================================================
 */
struct writable_data {
	u32_t size;
	u32_t *data;
};

/*
 *ブロックの情報を保持しておく
 */
extern struct block_info blocks_info[100];

//inodeを作る関数
struct i_node icreat(char *file_name);

/*
 *=======================================================================================
 *new_wrdata関数
 *新しくwritable_data構造体を確保する関数
 *=======================================================================================
 */
void new_wrdata(struct writable_data *data, u32_t size);

/*
 *=======================================================================================
 *delete_wrdata関数
 *writable_data構造体を開放する関数
 *=======================================================================================
 */
void delete_wrdata(struct writable_data *data);

/*
 *=======================================================================================
 *iwrite関数
 *inode情報を補助記憶装置に書き込む
 *=======================================================================================
 */
void iwrite(struct i_node *inode);


#endif
